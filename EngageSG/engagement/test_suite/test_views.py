from django.urls import reverse
from rest_framework import status
from rest_framework.test import APITestCase
from ..models import SurveyResponse

class SurveyResponseTests(APITestCase):
    def setUp(self):
        # Create a sample survey response for testing
        self.response = SurveyResponse.objects.create(
            uid="123456",
            sample="Resident (Citizen/PR)",
            gender="Female",
            age_2="25-34 years old",
            dwelling="HDB 3 room",
            industry="Wholesale and Retail Trade",
            social_involve_1="Yes",
            social_involve_2="No",
            social_involve_3="Yes",
            social_involve_4="No",
            social_involve_5="No",
            social_involve_6="Yes",
            social_involve_7="No",
            social_involve_8="Yes",
            social_involve_9="No",
            volunteerdonate_1="Yes",
            volunteerdonate_2="No",
            volunteerdonate_3="Yes",
            volunteerdonate_4="Yes",
            volunteerdonate_5="No",
            volunteerdonate_6="Yes",
            volunteerdonate_7="No",
            volunteerdonate_8="Yes",
            volunteerdonate_9="No",
            volunteerdonate_freq="Weekly",
            volunteerdonate_metd="Online",
            snetwork_ethnicity="Yes",
            snetwork_nationality="No",
            snetwork_religion="Yes",
            snetwork_income="No",
            snetwork_education="Yes",
            snetwork_sorientation="No",
            close_sg_friends="Yes",
            sinteract_meal="No",
            sinteract_invitedfriend="Yes",
            sinteract_beeninvited="Yes",
            sinteract_participated="No",
            support_immedfam="Yes",
            support_extfam="No",
            support_worksch="Yes",
            support_friends="No",
            os_exp_1="No",
            os_exp_2="Yes",
            os_exp_3="No",
            os_exp_4="None",
            time_os="1 year",
            study_os="No",
            work_os="Yes",
            travel_os="No",
            migrate_os="No",
            retire_os="Yes",
            outcome_connection="Strong",
            outcome_future="Very strong",
            pillarbeh_1="Yes",
            pillarbeh_2="No",
            pillarbeh_3="Yes",
            pillarbeh_4="No",
            pillarbeh_5="Yes",
            pillarbeh_6="No",
            pillarbeh_7="Yes",
            pillarbeh_8="No",
            pillarbeh_9="Yes",
            pillarbeh_10="No",
            pillarbeh_11="Yes",
            pillarbeh_12="No",
            pillarbeh_13="Yes",
            pillarbeh_14="No",
            pillarbeh_15="Yes",
            pillarvals_1="Yes",
            pillarvals_2="Strongly agree",
            pillarvals_3="Agree",
            pillarvals_4="Disagree",
            pillarvals_5="Agree",
            pillarvals_6="Yes",
            pillarvals_7="No",
            pillarvals_8="Yes",
            pillarvals_9="Strongly agree",
            pillarvals_12="Yes",
            pillarvals_13="No",
            pillarvals_14="Yes",
            pillarvals_21="Agree",
            pillarvals_22="Strongly agree",
            pillarvals_23="Disagree",
            pillarvals_24="Agree",
            pillarvals_25="Agree",
            pillarvals_26="No",
            pillarvals_29="Yes",
            pillarvals_30="Strongly agree",
            pillarvals_31="Agree",
            pillarvals_32="Disagree",
            pillarvals_33="Yes",
            online_news="Yes",
            online_sm="No",
            online_shop="Yes",
            online_areasinterest="No",
            online_games="Yes",
            online_update="No",
            online_sharemedia="Yes",
            online_watchmedia="No",
            marital_stats="Married",
            children="Yes",
            age_youngestchild="6",
            hh_grandparents="No",
            hh_parents="Yes",
            hh_siblings="No",
            hh_spouse="Yes",
            hh_children="No",
            hh_relatives="Yes",
            hh_helper="No",
            hh_mates="No",
            hh_employer_their_family="No",
            hh_grandchildren="No",
            hh_other="No",
            hh_none="No",
            highest_ed="Bachelor's",
            institution_deg="Example University",
            occupation="Engineer",
            mhi="S4,001-S5,000",
            mpi="S2,001-S3,000",
            weight=70.5
        )

    def test_create_survey_response(self):
        url = reverse('surveyresponse-list')  # URL for the survey response list endpoint
        data = {
            "uid": "123457",
            "sample": "Resident (Citizen/PR)",
            "gender": "Male",
            "age_2": "35-44 years old",
            "dwelling": "Private Apartment",
            "industry": "Information Technology",
            "social_involve_1": "Yes",
            "social_involve_2": "No",
            "social_involve_3": "No",
            "social_involve_4": "Yes",
            "social_involve_5": "Yes",
            "social_involve_6": "No",
            "social_involve_7": "Yes",
            "social_involve_8": "No",
            "social_involve_9": "No",
            "volunteerdonate_1": "Yes",
            "volunteerdonate_2": "No",
            "volunteerdonate_3": "No",
            "volunteerdonate_4": "Yes",
            "volunteerdonate_5": "No",
            "volunteerdonate_6": "No",
            "volunteerdonate_7": "Yes",
            "volunteerdonate_8": "No",
            "volunteerdonate_9": "No",
            "volunteerdonate_freq": "Monthly",
            "volunteerdonate_metd": "In-person",
            "snetwork_ethnicity": "Yes",
            "snetwork_nationality": "No",
            "snetwork_religion": "No",
            "snetwork_income": "Yes",
            "snetwork_education": "Yes",
            "snetwork_sorientation": "No",
            "close_sg_friends": "Yes",
            "sinteract_meal": "Yes",
            "sinteract_invitedfriend": "No",
            "sinteract_beeninvited": "Yes",
            "sinteract_participated": "No",
            "support_immedfam": "Yes",
            "support_extfam": "No",
            "support_worksch": "Yes",
            "support_friends": "No",
            "os_exp_1": "Yes",
            "os_exp_2": "Yes",
            "os_exp_3": "No",
            "os_exp_4": "None",
            "time_os": "2 years",
            "study_os": "No",
            "work_os": "Yes",
            "travel_os": "Yes",
            "migrate_os": "No",
            "retire_os": "Yes",
            "outcome_connection": "Moderate",
            "outcome_future": "Strong",
            "pillarbeh_1": "Yes",
            "pillarbeh_2": "Yes",
            "pillarbeh_3": "No",
            "pillarbeh_4": "No",
            "pillarbeh_5": "Yes",
            "pillarbeh_6": "Yes",
            "pillarbeh_7": "No",
            "pillarbeh_8": "Yes",
            "pillarbeh_9": "No",
            "pillarbeh_10": "Yes",
            "pillarbeh_11": "No",
            "pillarbeh_12": "Yes",
            "pillarbeh_13": "No",
            "pillarbeh_14": "Yes",
            "pillarbeh_15": "No",
            "pillarvals_1": "Yes",
            "pillarvals_2": "Agree",
            "pillarvals_3": "Disagree",
            "pillarvals_4": "Yes",
            "pillarvals_5": "No",
            "pillarvals_6": "Yes",
            "pillarvals_7": "No",
            "pillarvals_8": "Yes",
            "pillarvals_9": "Yes",
            "pillarvals_12": "No",
            "pillarvals_13": "Yes",
            "pillarvals_14": "No",
            "pillarvals_21": "Agree",
            "pillarvals_22": "Disagree",
            "pillarvals_23": "Yes",
            "pillarvals_24": "No",
            "pillarvals_25": "Yes",
            "pillarvals_26": "No",
            "pillarvals_29": "Yes",
            "pillarvals_30": "Agree",
            "pillarvals_31": "Strongly agree",
            "pillarvals_32": "No",
            "pillarvals_33": "Yes",
            "online_news": "Yes",
            "online_sm": "No",
            "online_shop": "Yes",
            "online_areasinterest": "No",
            "online_games": "Yes",
            "online_update": "No",
            "online_sharemedia": "Yes",
            "online_watchmedia": "No",
            "marital_stats": "Single",
            "children": "No",
            "age_youngestchild": "N/A",
            "hh_grandparents": "No",
            "hh_parents": "Yes",
            "hh_siblings": "No",
            "hh_spouse": "No",
            "hh_children": "No",
            "hh_relatives": "Yes",
            "hh_helper": "No",
            "hh_mates": "No",
            "hh_employer_their_family": "No",
            "hh_grandchildren": "No",
            "hh_other": "No",
            "hh_none": "Yes",
            "highest_ed": "Master's",
            "institution_deg": "Another University",
            "occupation": "Manager",
            "mhi": "S6,001-S7,000",
            "mpi": "S3,001-S4,000",
            "weight": 75.0
        }
        response = self.client.post(url, data, format='json')
    
        # Print the response content to debug the error
        #print("Response status:", response.status_code)
        #print("Response data:", response.data)
        self.assertEqual(response.status_code, status.HTTP_201_CREATED)

    def test_list_survey_responses(self):
        url = reverse('surveyresponse-list')
        response = self.client.get(url)
        self.assertEqual(response.status_code, status.HTTP_200_OK)
        self.assertEqual(len(response.data), 1)  # Check that we have one response